<div class="ui middle aligned center aligned">
  <form id="ppform" class="ui fluid form">
    <div class="inline field">
    <input type="email" id="email" placeholder="Email" />
    <div class="ui left pointing label">
    This is how the server finds your public key.
    </div>
    </div>
    <div class="inline field">
    <input type="password" id="password" placeholder="Password" />
    <div class="ui left pointing label">
    So the server knows if you are who you say you are.
    </div>
    </div>
    <div class="inline field">
    <input type="text" id="passphrase" placeholder="Passphrase" />
    <div class="ui left pointing label">
    Your PGP passphrase. Be sure to enter it carefully.
    </div>
    </div>
    <div class="inline field">
      <div class="ui mini right labeled input">
        <input type="text" id="howlong" value="15">
        <div class="ui label">
        minutes
        </div>
      </div>
    </div>
    <div class="field">
    <button class="ui button" id="submitter">Remember</button> <span id="reveal" class="discreet-action"></span>
    </div>
    <p>Enter your passphrase. It will be stored locally in your browser for however long you specify (default: 15 min).</p>
    <p>It will never be sent to the server.</p>
    <div id="flash"></div>
  </form>
  <div class="ui divider"></div>
  <form id="ppdform" class="ui fluid form">
    <div class="field">
    <button class="ui button" id="forgetter">Forget now</button> <span id="reveal" class="discreet-action"></span>
    </div>
    <p>Immediately forget passphrase and delete server-side session</p>
  </form>
</div>


<script>
$(function() {
  function reveal_passphrase() {
    var curtype = $('#passphrase').attr('type');
    if(curtype == "password") {
      var newtype = "text";
      var newaction = "hide passphrase";
    }
    else {
      var newtype = "password";
      var newaction = "reveal passphrase";
    }
    $('#passphrase').attr('type', newtype);
    $('#reveal').text(newaction);
  }

  $('#reveal').click(function(e) {
    reveal_passphrase();
  });

  $('#ppdform').submit(function(e) {
    e.preventDefault();

    localStorage.removeItem("vaultpassphrase");

    $.ajax({
      type: "POST",
      url: "/forget.json",
      data: {},
      success: function(diag) {
        refresh_passphrase_status();
        display_flash("Forgotten.", "positive");
      }
    });
  });

  $('#ppform').submit(function(e) {
    e.preventDefault();

    var identity = $('#email').val();
    var password = $('#password').val();
    var howlong  = parseInt($('#howlong').val());
    if(identity.length == 0) {
      alert("Please enter your email address");
    }
    else if(password.length == 0) {
      alert("Please enter your password");
    }
    else if(howlong < 1) {
      alert("Please enter a valid duration");
    }
    else {
      var passphrase = $('#passphrase').val();
      if(passphrase.length == 0) {
        alert("Please enter a passphrase");
      }
      else {

        display_loader("Attempting log in");

        $.ajax({
          type: "POST",
          url: "/auth.json",
          data: { identity: identity, password: password },
          success: function(diag) {
            hide_loader();

            if(diag.diag) {
              var data = {identity: identity, passphrase: passphrase, ts: new Date().getTime() + (howlong * 60 * 1000)}
              localStorage.setItem("vaultpassphrase", JSON.stringify(data));
              expire_passphrase();
              refresh_passphrase_status();
              $.each(['#email', '#password', '#passphrase'], function(idx, field) {
                $(field).val('');
              });
              $(howlong).val('15');
              display_flash("Passphrase remembered for the next " + howlong + " minutes.", "positive");
            }
            else {
              localStorage.removeItem("vaultpassphrase");
              display_flash("Unable to log you in.", "error");
            }
            $('#email').focus();
          }
        });

      }
    }
  });

  reveal_passphrase();

});
</script>
